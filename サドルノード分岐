import numpy as np
import matplotlib.pyplot as plt

def saddle_node_system(x, r):
    """サドルノード分岐を示す1次元力学系 dx/dt"""
    dx = r + x**2
    return dx

# パラメータ設定
r_values = [-1, 0, 1]  # サドルノード分岐前, 分岐点, 分岐後
x_range = np.linspace(-2, 2, 400)

fig, axes = plt.subplots(1, 3, figsize=(15, 5))

for i, r in enumerate(r_values):
    DX = saddle_node_system(x_range, r)
    
    axes[i].plot(x_range, DX, label=f'dx/dt (r={r})')
    axes[i].axhline(0, color='black', linestyle='--')
    
    # 固定点のプロット
    if r < 0:
        fixed_points = [-np.sqrt(-r), np.sqrt(-r)]
    elif r == 0:
        fixed_points = [0]
    else:
        fixed_points = []
    
    for fp in fixed_points:
        axes[i].scatter(fp, 0, color='red', s=100, label='Fixed Point')
    
    axes[i].set_xlim(-2, 2)
    axes[i].set_ylim(-2, 2)
    axes[i].set_title(f'r = {r}')
    axes[i].set_xlabel('x')
    axes[i].set_ylabel('dx/dt')
    axes[i].legend()
    axes[i].grid()

plt.suptitle("Saddle-Node Bifurcation")
plt.tight_layout()
plt.show()
