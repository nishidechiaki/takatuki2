import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import make_interp_spline

# 関数 v(h) の定義
def v(h):
    return 0.9 * h**2 / (1 + h**2)

# 導関数 dv/dh の定義
def dv_dh(h):
    numerator = 1.8 * h * (1 + h**2) - 0.9 * h**3 * 2
    denominator = (1 + h**2)**2
    return numerator / denominator

# h の範囲を定義
h = np.linspace(-10, 10, 400)

# v(h) と dv/dh の計算
v_values = v(h)
dv_dh_values = dv_dh(h)

# N を設定
N = 50
k = np.arange(0, (N-1)//2 + 1)
y = 1 / (1 + np.cos(2 * np.pi * k / N))

# グラフの描画
plt.figure(figsize=(10, 6))

# dv/dh のグラフ
plt.plot(h, dv_dh_values, label="dv/dh", color='r')

# y = 1 / (1 + cos(2 * pi * k / N)) の点を滑らかな曲線で描画
k_new = np.linspace(k.min(), k.max(), 300)
spl = make_interp_spline(k, y, k=3)  # スプライン補間
y_smooth = spl(k_new)

plt.plot(k_new, y_smooth, label="Smooth curve of y", color='b')

# グラフの設定
plt.xlabel('h')
plt.ylabel('Value')
plt.title('Graphs of dv/dh and y = 1 / (1 + cos(2*pi*k/N))')
plt.xlim(0, 10)
plt.ylim(0, 0.6)
plt.legend()
plt.grid(True)
plt.show()
