import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import make_interp_spline

# 関数 v(h) の定義
def v(h):
    return 0.9 * h**2 / (1 + h**2)

# 導関数 dv/dh の定義
def dv_dh(h):
    numerator = 1.8 * h * (1 + h**2) - 0.9 * h**3 * 2
    denominator = (1 + h**2)**2
    return numerator / denominator

# h の範囲を定義
h = np.linspace(-10, 10, 400)

# v(h) と dv/dh の計算
v_values = v(h)
dv_dh_values = dv_dh(h)

# N を設定
N = 50
k = 0  # kを0に設定
y = 1 / (1 + np.cos(2 * np.pi * k / N))

# グラフの描画
plt.figure(figsize=(10, 6))

# dv/dh のグラフ
plt.plot(h, dv_dh_values, label="dv/dh", color='r')

# y = 1 / (1 + cos(2 * pi * k / N)) の水平線を描画
plt.axhline(y=y, color='b', linestyle='-', label="y = 1 / (1 + cos(2 * pi * 0 / 50))")

# グラフの設定
plt.xlabel('h')
plt.ylabel('Value')
plt.title('Graphs of dv/dh and y = 1 / (1 + cos(2*pi*k/N)) with k=0')
plt.xlim(0, 10)
plt.ylim(0, 0.6)
plt.legend()
plt.grid(True)
plt.show()
