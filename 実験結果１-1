import matplotlib.pyplot as plt 
import numpy as np

def logistic_map(x, r):
    return r * x * (1 - x)

def plot_cobweb(r, x0, max_iter=10000, tol=1e-):
    x = x0
    values_xn = [x] 
    iterations = 0
    
    
    while iterations < 10000:
        x_next = logistic_map(x, r)
        values_xn.append(x_next)
        
        x = x_next
        iterations += 1
    
    # x_n の値を表示
    print("x_n の値 (n=0 から 18):")
    for i in range(len(values_xn)):
        print(f"x_{i} = {values_xn[i]:.12f}")
    
    # 固定点の計算
    sqrt_term = np.sqrt((r - 3) * (r + 1))
    x_star_plus = (r + 1 + sqrt_term) / (2 * r)
    x_star_minus = (r + 1 - sqrt_term) / (2 * r)
    x_star = x_star_plus if abs(x - x_star_plus) < abs(x - x_star_minus) else x_star_minus
    
    # λの計算
    if len(values_xn) > 10000:
        lambda_value = (values_xn[114] - x_star) / (values_xn[112] - x_star)
        print(f"λ = {lambda_value:.12f}")
    
   
    fig, ax = plt.subplots()
    x_vals = np.linspace(0, 1, 500)
    y_vals = logistic_map(x_vals, r)
    ax.plot(x_vals, y_vals, 'b', label=f'Logistic Map (r={r})')
    ax.plot(x_vals, x_vals, 'k', label='y = x')
 
    x = x0
    for i in range(iterations):
        x_next = logistic_map(x, r)
        ax.plot([x, x], [x, x_next], 'r', lw=1)
        ax.plot([x, x_next], [x_next, x_next], 'r', lw=1)
        x = x_next
    
    ax.set_xlabel('$x_n$')
    ax.set_ylabel('$x_{n+1}$')
    ax.legend()
    plt.title(f'Cobweb Plot for r={r}, x0={x0}')
    plt.show()
    
# 初期値とパラメータ
r = 3.4
x0 = 0.1
plot_cobweb(r, x0)
