import numpy as np
import matplotlib.pyplot as plt

x0 = 0.1
r_values1 = np.linspace(2.4, 3.0, 100)  # r < 3.0 の範囲
r_values2 = np.linspace(3.0, 3.448, 100)  # 3.0 <= r < 3.448 の範囲
max_iterations = 10000
tolerance = 1e-10

lambda_values = []
r_list = []

# r < 3.0 の計算
for r in r_values1:
    x_n = x0
    
    for _ in range(max_iterations):
        x_next = r * x_n * (1 - x_n)
        if abs(x_next - x_n) < tolerance:
            break
        x_n = x_next

    x_star = (r - 1) / r
    denominator = x_n - x_star + tolerance  
    lambda_value = (r * x_n * (1 - x_n) - x_star) / denominator

    lambda_values.append(lambda_value)
    r_list.append(r)

# 3.0 <= r < 3.448 の計算
for r in r_values2:
    x_n = x0
    
    for _ in range(max_iterations):
        x_next = r * x_n * (1 - x_n)
        if abs(x_next - x_n) < tolerance:
            break
        x_n = x_next

    sqrt_term = np.sqrt((r - 3) * (r + 1)) if r >= 3 else 0
    x_star_plus = (r + 1 + sqrt_term) / (2 * r)
    x_star_minus = (r + 1 - sqrt_term) / (2 * r)
    x_star = x_star_plus if abs(x_n - x_star_plus) < abs(x_n - x_star_minus) else x_star_minus  

    denominator = x_n - x_star + tolerance  
    lambda_value = np.abs((r * x_n * (1 - x_n) - x_star) / denominator) ** (1 / 2)

    lambda_values.append(lambda_value)
    r_list.append(r)


r_list = np.array(r_list)
lambda_values = np.array(lambda_values)
valid_indices = ~np.isnan(lambda_values)

plt.figure(figsize=(8, 6))
plt.plot(r_list[valid_indices], lambda_values[valid_indices], marker='o', linestyle='', markersize=3)
plt.xlabel("r")
plt.ylabel("\u03bb")
plt.xlim(2.4, 3.448)
plt.grid(True)
plt.show()
