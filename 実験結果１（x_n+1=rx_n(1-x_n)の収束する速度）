import numpy as np
import matplotlib.pyplot as plt

x0 = 0.5
r_values = np.linspace(2.4, 3.45, 200)
max_iterations = 1000
min_iterations = 100
tolerance = 1e-8

lambda_values = []
r_list = []

for r in r_values:
    x = x0
    trajectory = []
    iterations = max_iterations

    for i in range(iterations):
        x = r * x * (1 - x)
        trajectory.append(x)
        
        if i > min_iterations and abs(trajectory[-1] - trajectory[-2]) < tolerance:
            iterations = i + 1
            break

    trajectory = np.array(trajectory[-10:])

    if r < 3.0:
        x_star = (r-1) / r
        lambda_value = r - 2
    elif 3.0 <= r < 3.448:
        sqrt_term = np.sqrt((r - 3) * (r + 1))
        x_star_plus = (r + 1 + sqrt_term) / (2 * r)
        x_star_minus = (r + 1 - sqrt_term) / (2 * r)
        x_star = x_star_plus  
        a = 2
        x_n = trajectory[-a]
        x_n_plus_a = trajectory[-1]
        denominator = x_n - x_star
        lambda_value = np.nan if abs(denominator) < tolerance else np.abs((x_n_plus_a - x_star) / denominator) ** (1 / 2)
    else:
        x_star = (r-1) / r
        a = 4
        x_n = trajectory[-a]
        x_n_plus_a = trajectory[-1]
        denominator = x_n - x_star
        lambda_value = np.nan if abs(denominator) < tolerance else np.abs((x_n_plus_a - x_star) / denominator) ** (1 / 2)
    
    lambda_values.append(lambda_value)
    r_list.append(r)

plt.figure(figsize=(8, 6))
plt.plot(r_list, lambda_values, marker='o', linestyle='', markersize=3)
plt.xlabel("r")
plt.ylabel("\u03bb")
plt.grid(True)
plt.show()
