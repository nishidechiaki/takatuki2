import numpy as np
from scipy.interpolate import make_interp_spline
import matplotlib.pyplot as plt

# Lの範囲と対応するλの値を定義
L_values_10 = [10] * 13
lambda_values_10 = [-0.00155948, -0.00158958, -0.00162413, -0.00166406, -0.00171052, -0.00176498,
                    -0.00182958, -0.00190723, -0.0020016, -0.00211729, -0.0022637, -0.00245966,
                    -0.00272009]

L_values_10_5 = [10.5] * 15
lambda_values_10_5 = [-0.00290742, -0.0029136, -0.00292381, -0.00293922, -0.00296103, -0.0029909,
                      -0.00303106, -0.00308426, -0.00315384, -0.00324476, -0.00336733, -0.00353694,
                      -0.00375977, -0.00404408, -0.00454857]

L_values_11 = [11] * 15
lambda_values_11 = [-0.00453005, -0.00451138, -0.00449472, -0.00448156, -0.00447415, -0.00447525,
                    -0.00448864, -0.00451935, -0.00457518, -0.00466816, -0.00481008, -0.00500364,
                    -0.00527225, -0.0057907, -0.00672393]

# プロットのために必要なLの値を定義
L_points = [10, 10.5, 11]

# プロットを作成
plt.figure(figsize=(10, 6))

# iを0から16までループ
for i in range(min(len(lambda_values_10), len(lambda_values_10_5), len(lambda_values_11))):
    if i < len(lambda_values_10) and i < len(lambda_values_10_5) and i < len(lambda_values_11):
        lambda_points = [lambda_values_10[i], lambda_values_10_5[i], lambda_values_11[i]]
        
        # スプライン補間
        L_smooth = np.linspace(min(L_points), max(L_points), 300)
        spl = make_interp_spline(L_points, lambda_points, k=2)
        lambda_smooth = spl(L_smooth)
        
        # プロット
        plt.plot(L_smooth, lambda_smooth, label=f'Point {i+1}')
        plt.scatter(L_points, lambda_points)

plt.xlabel('L')
plt.ylabel('λ')
plt.title('Smooth curves for different L values')
plt.xlim(9, 12)
plt.legend()
plt.show()
